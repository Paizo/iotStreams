version: '3.1'

services:
  monitor-api:
    container_name: monitor-api
    build: ./MonitorAPI
    environment:
      - DATABASE_HOST=mongodb
      - DATABASE_PORT=27017
      - DATABASE_NAME=iot
    ports:
      - "8080:8080"
      - "9003:9003"
    links:
      - mongodb
    depends_on:
      - mongodb

  producer:
    container_name: producer
    build: ./producer
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - "9001:9001"
    links:
      - kafka
    depends_on:
      - kafka

  bridge:
    container_name: bridge
    build: ./kafka2mongobridge
    environment:
      - DATABASE_HOST=mongodb
      - DATABASE_PORT=27017
      - DATABASE_NAME=iot
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - "9002:9002"
    links:
      - mongodb
      - kafka
    depends_on:
      - mongodb
      - kafka

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:1.1.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "refrigerator-raw:1:1,smart-couch-raw:1:1,smart-watch-raw:1:1,car-fuel-raw:1:1"
    depends_on:
      - zookeeper

  mongodb:
    image: mongo:latest
    container_name: mongodb
#    environment:
#     - MONGO_DATA_DIR=/data/db
#     - MONGO_LOG_DIR=/mongodb/logs
#    volumes:
#     - ./data/db:/data/db
    ports:
      - 27017:27017
    command: mongod --smallfiles
#    restart: always